{
  "python.defaultInterpreterPath": "./venv/bin/python",
  "python.terminal.activateEnvironment": true,
  
  // Linting configuration
  "python.linting.enabled": true,
  "python.linting.pylintEnabled": false,
  "python.linting.flake8Enabled": false,
  "python.linting.mypyEnabled": true,
  "python.linting.banditEnabled": true,
  
  // Formatting configuration
  "python.formatting.provider": "black",
  "python.formatting.blackArgs": [
    "--line-length=88",
    "--target-version=py38"
  ],
  
  // Import sorting
  "python.sortImports.args": [
    "--profile=black",
    "--line-length=88"
  ],
  
  // Testing configuration
  "python.testing.pytestEnabled": true,
  "python.testing.unittestEnabled": false,
  "python.testing.pytestArgs": [
    "tests",
    "--verbose",
    "--tb=short"
  ],
  "python.testing.autoTestDiscoverOnSaveEnabled": true,
  
  // Editor settings
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.codeActionsOnSave": {
    "source.organizeImports": true,
    "source.fixAll": true
  },
  "editor.rulers": [88],
  "editor.tabSize": 4,
  "editor.insertSpaces": true,
  "editor.trimAutoWhitespace": true,
  
  // File associations
  "files.associations": {
    "*.yml": "yaml",
    "*.yaml": "yaml",
    ".testgen.config": "json",
    "*.testgen": "json",
    ".bandit": "yaml",
    "pyproject.toml": "toml"
  },
  
  // Exclude patterns
  "files.exclude": {
    "**/__pycache__": true,
    "**/*.pyc": true,
    "**/.pytest_cache": true,
    "**/.coverage": true,
    "**/htmlcov": true,
    "**/.mypy_cache": true,
    "**/.ruff_cache": true,
    "**/build": true,
    "**/dist": true,
    "**/*.egg-info": true,
    ".cache": true,
    "logs": true,
    "profiles": true
  },
  
  // Search exclude patterns
  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true,
    "**/*.code-search": true,
    "**/__pycache__": true,
    "**/.pytest_cache": true,
    "**/htmlcov": true,
    "**/coverage.xml": true,
    "**/.coverage": true
  },
  
  // YAML schema associations
  "yaml.schemas": {
    "./schemas/security-rule.schema.json": [
      "security/rules/*.yml",
      "security/rules/*.yaml"
    ],
    "./schemas/testgen-config.schema.json": [
      ".testgen.config.json",
      "**/.testgen.config.json"
    ]
  },
  
  // GitHub Copilot settings
  "github.copilot.enable": {
    "*": true,
    "yaml": true,
    "plaintext": false,
    "markdown": true
  },
  
  // GitLens settings
  "gitlens.codeLens.enabled": true,
  "gitlens.currentLine.enabled": true,
  "gitlens.hovers.enabled": true,
  
  // Terminal settings
  "terminal.integrated.defaultProfile.linux": "bash",
  "terminal.integrated.env.linux": {
    "PYTHONPATH": "${workspaceFolder}/src"
  },
  
  // Task and debug configuration
  "python.envFile": "${workspaceFolder}/.env",
  "python.analysis.autoImportCompletions": true,
  "python.analysis.autoSearchPaths": true,
  "python.analysis.extraPaths": [
    "./src"
  ],
  
  // Markdown settings
  "markdownlint.config": {
    "MD013": false,
    "MD033": false
  },
  
  // JSON settings
  "json.schemas": [
    {
      "fileMatch": [".testgen.config.json"],
      "url": "./schemas/testgen-config.schema.json"
    },
    {
      "fileMatch": [".github/project-metrics.json"],
      "url": "./schemas/project-metrics.schema.json"
    }
  ],
  
  // Extension specific settings
  "ruff.args": [
    "--config=pyproject.toml"
  ],
  "mypy.runUsingActiveInterpreter": true,
  "mypy.targets": [
    "src/testgen_copilot"
  ],
  
  // Code coverage display
  "coverage-gutters.showGutterCoverage": true,
  "coverage-gutters.showLineCoverage": true,
  "coverage-gutters.showRulerCoverage": true,
  "coverage-gutters.lcovname": "coverage/lcov.info",
  
  // Problem matcher settings
  "problems.decorations.enabled": true,
  "problems.showCurrentInStatus": true,
  
  // Workspace trust
  "security.workspace.trust.untrustedFiles": "open"
}
# SLSA (Supply-chain Levels for Software Artifacts) Compliance Configuration
# Advanced supply chain security framework for TestGen Copilot

# =============================================================================
# SLSA Level Requirements
# =============================================================================
slsa_level: 2  # Target SLSA level (1-3)

# SLSA Level 1 Requirements
level_1:
  build_service:
    scripted_build: true
    build_service_generates_provenance: true
  
  provenance_requirements:
    available: true
    authentic: true
    
  common_requirements:
    security_best_practices: true
    retain_indefinitely: true

# SLSA Level 2 Requirements (extends Level 1)
level_2:
  build_service:
    hosted_build_platform: true
    non_falsifiable_provenance: true
  
  source_requirements:
    version_controlled: true
    verified_history: true
    retained_indefinitely: true
  
  build_requirements:
    build_as_code: true
    ephemeral_environment: true
    isolated_build: true

# SLSA Level 3 Requirements (extends Level 2)
level_3:
  source_requirements:
    verified_history: true
    two_person_reviewed: true
    retained_indefinitely: true
  
  build_requirements:
    hardened_build_platform: true
    non_falsifiable_provenance: true
    isolation_strength: "strong"

# =============================================================================
# Build Configuration
# =============================================================================
build:
  # Build environment
  environment:
    ephemeral: true
    isolated: true
    hardened: false  # Set to true for SLSA Level 3
  
  # Build platform
  platform:
    type: "github_actions"
    runner: "ubuntu-latest"
    hosted: true
  
  # Build process
  process:
    scripted: true
    reproducible: true
    hermetic: false  # Requires network access for dependencies
  
  # Build outputs
  outputs:
    generate_provenance: true
    sign_artifacts: true
    verify_signatures: true

# =============================================================================
# Source Requirements
# =============================================================================
source:
  # Version control
  version_control:
    system: "git"
    platform: "github"
    verified_history: true
    retained_indefinitely: true
  
  # Code review
  code_review:
    required: true
    two_person_minimum: false  # Set to true for SLSA Level 3
    automated_checks: true
  
  # Branch protection
  branch_protection:
    enabled: true
    require_reviews: true
    require_status_checks: true
    require_up_to_date: true
    include_administrators: true

# =============================================================================
# Provenance Generation
# =============================================================================
provenance:
  # Generator information
  generator:
    name: "github-actions"
    version: "latest"
    authentic: true
  
  # Build metadata
  metadata:
    build_invocation_id: true
    build_started_on: true
    build_finished_on: true
    completeness: "complete"
    reproducible: false
  
  # Materials (dependencies)
  materials:
    track_dependencies: true
    verify_checksums: true
    record_source_locations: true
  
  # Output format
  format: "in-toto"
  signing:
    enabled: true
    keyless: true  # Using Sigstore/Fulcio
    transparency_log: true

# =============================================================================
# Security Measures
# =============================================================================
security:
  # Dependency management
  dependencies:
    pin_versions: true
    verify_signatures: true
    scan_vulnerabilities: true
    track_provenance: true
  
  # Secrets management
  secrets:
    use_secure_vault: true
    rotate_regularly: true
    limit_access: true
    audit_usage: true
  
  # Access control
  access_control:
    principle_of_least_privilege: true
    multi_factor_authentication: true
    regular_access_reviews: true
  
  # Security scanning
  scanning:
    static_analysis: true
    dynamic_analysis: false
    dependency_scanning: true
    container_scanning: true
    secret_scanning: true

# =============================================================================
# Attestation Requirements
# =============================================================================
attestations:
  # Required attestations
  required:
    - type: "build_provenance"
      generator: "github-actions"
    - type: "vulnerability_scan"
      generator: "trivy"
    - type: "test_results"
      generator: "pytest"
  
  # Optional attestations
  optional:
    - type: "code_review"
      generator: "github"
    - type: "security_review"
      generator: "manual"
    - type: "license_compliance"
      generator: "fossa"

# =============================================================================
# Verification Requirements
# =============================================================================
verification:
  # Build verification
  build:
    verify_provenance: true
    verify_signatures: true
    check_transparency_log: true
  
  # Dependency verification
  dependencies:
    verify_checksums: true
    check_provenance: true
    validate_licenses: true
  
  # Runtime verification
  runtime:
    verify_signatures: true
    check_attestations: true
    validate_provenance: true

# =============================================================================
# Supply Chain Threats Mitigation
# =============================================================================
threat_mitigation:
  # Build threats
  build_threats:
    - threat: "Compromise build platform"
      mitigation: "Use hosted, hardened build platform"
      status: "implemented"
    
    - threat: "Inject malicious code during build"
      mitigation: "Ephemeral, isolated build environment"
      status: "implemented"
    
    - threat: "Tamper with build scripts"
      mitigation: "Version-controlled build configuration"
      status: "implemented"
  
  # Source threats
  source_threats:
    - threat: "Submit malicious code"
      mitigation: "Code review and automated security scanning"
      status: "implemented"
    
    - threat: "Compromise source repository"
      mitigation: "Strong authentication and access controls"
      status: "implemented"
  
  # Dependency threats
  dependency_threats:
    - threat: "Malicious dependencies"
      mitigation: "Dependency scanning and provenance verification"
      status: "implemented"
    
    - threat: "Dependency confusion"
      mitigation: "Pin versions and use verified sources"
      status: "implemented"

# =============================================================================
# Compliance Monitoring
# =============================================================================
monitoring:
  # Compliance checks
  checks:
    frequency: "daily"
    automated: true
    remediation: "automatic"
  
  # Metrics tracking
  metrics:
    - name: "provenance_coverage"
      target: 100
      current: 85
    
    - name: "verified_dependencies"
      target: 95
      current: 90
    
    - name: "security_scan_coverage"
      target: 100
      current: 95
  
  # Reporting
  reporting:
    frequency: "weekly"
    format: "json"
    recipients: ["security-team", "maintainers"]

# =============================================================================
# Continuous Improvement
# =============================================================================
improvement:
  # Regular assessments
  assessments:
    frequency: "quarterly"
    scope: "full"
    external_audit: false
  
  # Capability maturity
  maturity:
    current_level: 2
    target_level: 3
    timeline: "6 months"
  
  # Enhancement roadmap
  roadmap:
    - milestone: "Implement keyless signing"
      timeline: "1 month"
      owner: "security-team"
    
    - milestone: "Add hermetic builds"
      timeline: "3 months"
      owner: "platform-team"
    
    - milestone: "Achieve SLSA Level 3"
      timeline: "6 months"
      owner: "security-team"

# =============================================================================
# Integration Points
# =============================================================================
integrations:
  # CI/CD integration
  cicd:
    generate_provenance: true
    verify_dependencies: true
    sign_artifacts: true
    publish_attestations: true
  
  # Security tools
  security_tools:
    - name: "Sigstore"
      purpose: "Keyless signing"
      status: "planned"
    
    - name: "Trivy"
      purpose: "Vulnerability scanning"
      status: "implemented"
    
    - name: "Cosign"
      purpose: "Container signing"
      status: "planned"
  
  # Monitoring systems
  monitoring_systems:
    - name: "Grafana"
      purpose: "Metrics visualization"
      status: "implemented"
    
    - name: "Prometheus"
      purpose: "Metrics collection"
      status: "implemented"
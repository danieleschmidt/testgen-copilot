{
  "overall_score": 52.5,
  "max_score": 100.0,
  "passed_gates": 3,
  "total_gates": 6,
  "recommendation": "\u274c CRITICAL - Major issues must be resolved",
  "gate_results": [
    {
      "gate_name": "Import Validation",
      "passed": false,
      "score": 0.0,
      "max_score": 100.0,
      "details": {},
      "error_message": "No module named 'testgen_copilot.quantum_planner'"
    },
    {
      "gate_name": "Code Quality",
      "passed": true,
      "score": 100,
      "max_score": 100.0,
      "details": {
        "total_issues": 2889,
        "error_count": 0,
        "warning_count": 0,
        "issues": [
          {
            "cell": null,
            "code": "I001",
            "end_location": {
              "column": 41,
              "row": 20
            },
            "filename": "/root/repo/src/testgen_copilot/adaptive_intelligence.py",
            "fix": {
              "applicability": "safe",
              "edits": [
                {
                  "content": "import asyncio\nimport json\nimport logging\nfrom dataclasses import dataclass, field\nfrom datetime import datetime, timedelta\nfrom enum import Enum\nfrom pathlib import Path\nfrom typing import Any, Dict, List, Optional, Set, Tuple\n\nimport numpy as np\n\nfrom .logging_config import setup_logger\n\n",
                  "end_location": {
                    "column": 1,
                    "row": 22
                  },
                  "location": {
                    "column": 1,
                    "row": 10
                  }
                }
              ],
              "message": "Organize imports"
            },
            "location": {
              "column": 1,
              "row": 10
            },
            "message": "Import block is un-sorted or un-formatted",
            "noqa_row": 10,
            "url": "https://docs.astral.sh/ruff/rules/unsorted-imports"
          },
          {
            "cell": null,
            "code": "F401",
            "end_location": {
              "column": 15,
              "row": 10
            },
            "filename": "/root/repo/src/testgen_copilot/adaptive_intelligence.py",
            "fix": {
              "applicability": "safe",
              "edits": [
                {
                  "content": "",
                  "end_location": {
                    "column": 1,
                    "row": 11
                  },
                  "location": {
                    "column": 1,
                    "row": 10
                  }
                }
              ],
              "message": "Remove unused import: `asyncio`"
            },
            "location": {
              "column": 8,
              "row": 10
            },
            "message": "`asyncio` imported but unused",
            "noqa_row": 10,
            "url": "https://docs.astral.sh/ruff/rules/unused-import"
          },
          {
            "cell": null,
            "code": "F401",
            "end_location": {
              "column": 15,
              "row": 12
            },
            "filename": "/root/repo/src/testgen_copilot/adaptive_intelligence.py",
            "fix": {
              "applicability": "safe",
              "edits": [
                {
                  "content": "",
                  "end_location": {
                    "column": 1,
                    "row": 13
                  },
                  "location": {
                    "column": 1,
                    "row": 12
                  }
                }
              ],
              "message": "Remove unused import: `logging`"
            },
            "location": {
              "column": 8,
              "row": 12
            },
            "message": "`logging` imported but unused",
            "noqa_row": 12,
            "url": "https://docs.astral.sh/ruff/rules/unused-import"
          },
          {
            "cell": null,
            "code": "F401",
            "end_location": {
              "column": 41,
              "row": 15
            },
            "filename": "/root/repo/src/testgen_copilot/adaptive_intelligence.py",
            "fix": {
              "applicability": "safe",
              "edits": [
                {
                  "content": "from datetime import datetime",
                  "end_location": {
                    "column": 41,
                    "row": 15
                  },
                  "location": {
                    "column": 1,
                    "row": 15
                  }
                }
              ],
              "message": "Remove unused import: `datetime.timedelta`"
            },
            "location": {
              "column": 32,
              "row": 15
            },
            "message": "`datetime.timedelta` imported but unused",
            "noqa_row": 15,
            "url": "https://docs.astral.sh/ruff/rules/unused-import"
          },
          {
            "cell": null,
            "code": "F401",
            "end_location": {
              "column": 45,
              "row": 17
            },
            "filename": "/root/repo/src/testgen_copilot/adaptive_intelligence.py",
            "fix": {
              "applicability": "safe",
              "edits": [
                {
                  "content": "from typing import Any, Dict, List",
                  "end_location": {
                    "column": 57,
                    "row": 17
                  },
                  "location": {
                    "column": 1,
                    "row": 17
                  }
                }
              ],
              "message": "Remove unused import"
            },
            "location": {
              "column": 37,
              "row": 17
            },
            "message": "`typing.Optional` imported but unused",
            "noqa_row": 17,
            "url": "https://docs.astral.sh/ruff/rules/unused-import"
          },
          {
            "cell": null,
            "code": "F401",
            "end_location": {
              "column": 50,
              "row": 17
            },
            "filename": "/root/repo/src/testgen_copilot/adaptive_intelligence.py",
            "fix": {
              "applicability": "safe",
              "edits": [
                {
                  "content": "from typing import Any, Dict, List",
                  "end_location": {
                    "column": 57,
                    "row": 17
                  },
                  "location": {
                    "column": 1,
                    "row": 17
                  }
                }
              ],
              "message": "Remove unused import"
            },
            "location": {
              "column": 47,
              "row": 17
            },
            "message": "`typing.Set` imported but unused",
            "noqa_row": 17,
            "url": "https://docs.astral.sh/ruff/rules/unused-import"
          },
          {
            "cell": null,
            "code": "F401",
            "end_location": {
              "column": 57,
              "row": 17
            },
            "filename": "/root/repo/src/testgen_copilot/adaptive_intelligence.py",
            "fix": {
              "applicability": "safe",
              "edits": [
                {
                  "content": "from typing import Any, Dict, List",
                  "end_location": {
                    "column": 57,
                    "row": 17
                  },
                  "location": {
                    "column": 1,
                    "row": 17
                  }
                }
              ],
              "message": "Remove unused import"
            },
            "location": {
              "column": 52,
              "row": 17
            },
            "message": "`typing.Tuple` imported but unused",
            "noqa_row": 17,
            "url": "https://docs.astral.sh/ruff/rules/unused-import"
          },
          {
            "cell": null,
            "code": "W293",
            "end_location": {
              "column": 5,
              "row": 62
            },
            "filename": "/root/repo/src/testgen_copilot/adaptive_intelligence.py",
            "fix": {
              "applicability": "unsafe",
              "edits": [
                {
                  "content": "",
                  "end_location": {
                    "column": 5,
                    "row": 62
                  },
                  "location": {
                    "column": 1,
                    "row": 62
                  }
                }
              ],
              "message": "Remove whitespace from blank line"
            },
            "location": {
              "column": 1,
              "row": 62
            },
            "message": "Blank line contains whitespace",
            "noqa_row": 69,
            "url": "https://docs.astral.sh/ruff/rules/blank-line-with-whitespace"
          },
          {
            "cell": null,
            "code": "W293",
            "end_location": {
              "column": 5,
              "row": 70
            },
            "filename": "/root/repo/src/testgen_copilot/adaptive_intelligence.py",
            "fix": {
              "applicability": "safe",
              "edits": [
                {
                  "content": "",
                  "end_location": {
                    "column": 5,
                    "row": 70
                  },
                  "location": {
                    "column": 1,
                    "row": 70
                  }
                }
              ],
              "message": "Remove whitespace from blank line"
            },
            "location": {
              "column": 1,
              "row": 70
            },
            "message": "Blank line contains whitespace",
            "noqa_row": 70,
            "url": "https://docs.astral.sh/ruff/rules/blank-line-with-whitespace"
          },
          {
            "cell": null,
            "code": "W293",
            "end_location": {
              "column": 9,
              "row": 77
            },
            "filename": "/root/repo/src/testgen_copilot/adaptive_intelligence.py",
            "fix": {
              "applicability": "safe",
              "edits": [
                {
                  "content": "",
                  "end_location": {
                    "column": 9,
                    "row": 77
                  },
                  "location": {
                    "column": 1,
                    "row": 77
                  }
                }
              ],
              "message": "Remove whitespace from blank line"
            },
            "location": {
              "column": 1,
              "row": 77
            },
            "message": "Blank line contains whitespace",
            "noqa_row": 77,
            "url": "https://docs.astral.sh/ruff/rules/blank-line-with-whitespace"
          }
        ]
      },
      "error_message": null
    },
    {
      "gate_name": "Security Validation",
      "passed": false,
      "score": 0,
      "max_score": 100.0,
      "details": {
        "basic_check": true,
        "issues_found": 12,
        "issues": [
          "Potential hardcoded credential in src/testgen_copilot/input_validation.py",
          "Potential hardcoded credential in src/testgen_copilot/quantum_security.py",
          "Use of eval() in src/testgen_copilot/resource_limits.py",
          "Use of exec() in src/testgen_copilot/resource_limits.py",
          "Shell execution in src/testgen_copilot/security.py",
          "Use of eval() in src/testgen_copilot/security_monitoring.py",
          "Use of exec() in src/testgen_copilot/security_monitoring.py",
          "Potential hardcoded credential in src/testgen_copilot/security_monitoring.py",
          "Use of eval() in src/testgen_copilot/security_rules.py",
          "Use of exec() in src/testgen_copilot/security_rules.py",
          "Shell execution in src/testgen_copilot/security_rules.py",
          "Potential hardcoded credential in src/testgen_copilot/integrations/notifications.py"
        ]
      },
      "error_message": null
    },
    {
      "gate_name": "Performance Validation",
      "passed": false,
      "score": 0.0,
      "max_score": 100.0,
      "details": {},
      "error_message": "Performance validation failed: No module named 'testgen_copilot.quantum_planner'"
    },
    {
      "gate_name": "Research Validation",
      "passed": true,
      "score": 100.0,
      "max_score": 100.0,
      "details": {
        "research_files_found": 4,
        "total_research_files": 4,
        "has_theoretical_analysis": true,
        "has_benchmarking": true,
        "research_quality": "high"
      },
      "error_message": null
    },
    {
      "gate_name": "Architecture Validation",
      "passed": true,
      "score": 115.0,
      "max_score": 100.0,
      "details": {
        "components_found": 8,
        "total_components": 8,
        "modular_structure": {
          "api_module": true,
          "database_module": true,
          "integrations_module": true
        }
      },
      "error_message": null
    }
  ]
}
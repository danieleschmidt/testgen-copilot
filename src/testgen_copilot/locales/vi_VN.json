{
  "app.name": "TestGen Copilot",
  "app.description": "AI-powered test generation and security analysis tool",
  "app.version": "Version",
  "cli.generating_tests": "Generating tests for {filename}...",
  "cli.tests_generated": "Tests generated successfully",
  "cli.coverage_analysis": "Analyzing code coverage...",
  "cli.security_scan": "Performing security scan...",
  "cli.analysis_complete": "Analysis complete",
  "cli.error": "Error occurred: {error}",
  "cli.file_not_found": "File not found: {filename}",
  "cli.invalid_config": "Invalid configuration file",
  "test.generation.started": "Test generation started",
  "test.generation.completed": "Test generation completed",
  "test.generation.failed": "Test generation failed",
  "test.class_generated": "Generated test class: {class_name}",
  "test.method_generated": "Generated test method: {method_name}",
  "test.edge_cases": "Including edge case tests",
  "test.error_handling": "Including error handling tests",
  "test.integration": "Including integration tests",
  "security.scan_started": "Security scan started",
  "security.scan_completed": "Security scan completed",
  "security.vulnerability_found": "Vulnerability found: {vulnerability}",
  "security.critical_issue": "Critical security issue detected",
  "security.recommendations": "Security recommendations",
  "security.no_issues": "No security issues found",
  "coverage.analyzing": "Analyzing code coverage...",
  "coverage.result": "Coverage: {percentage}%",
  "coverage.target_met": "Coverage target met",
  "coverage.target_missed": "Coverage target not met",
  "coverage.missing_lines": "Missing coverage for lines: {lines}",
  "quality.score": "Quality score: {score}%",
  "quality.excellent": "Excellent test quality",
  "quality.good": "Good test quality",
  "quality.needs_improvement": "Test quality needs improvement",
  "file.reading": "Reading file: {filename}",
  "file.writing": "Writing file: {filename}",
  "file.parsing": "Parsing file: {filename}",
  "file.analysis": "Analyzing file structure",
  "error.file_not_readable": "Cannot read file: {filename}",
  "error.invalid_syntax": "Invalid syntax in file: {filename}",
  "error.permission_denied": "Permission denied: {filename}",
  "error.network_error": "Network error: {error}",
  "error.unexpected": "Unexpected error occurred",
  "success.operation_completed": "Operation completed successfully",
  "success.tests_created": "Test files created successfully",
  "success.analysis_saved": "Analysis results saved",
  "config.loading": "Loading configuration...",
  "config.loaded": "Configuration loaded successfully",
  "config.invalid": "Invalid configuration",
  "config.default": "Using default configuration",
  "perf.optimization_started": "Performance optimization started",
  "perf.cache_hit": "Cache hit for {key}",
  "perf.cache_miss": "Cache miss for {key}",
  "perf.scaling_up": "Scaling up resources",
  "perf.scaling_down": "Scaling down resources",
  "perf.load_balanced": "Load balanced to worker {worker_id}",
  "monitor.health_check": "Performing health check",
  "monitor.system_healthy": "System is healthy",
  "monitor.alert_triggered": "Alert triggered: {alert}",
  "monitor.metric_recorded": "Metric recorded: {metric}",
  "format.date_short": "{month}/{day}/{year}",
  "format.date_long": "{day} {month} {year}",
  "format.time_short": "{hour}:{minute}",
  "format.time_long": "{hour}:{minute}:{second}",
  "format.datetime": "{date} at {time}"
}